name: Terraform Apply

on:
  push:
    branches:
      - ci/add-terraform-workflows
      - release

permissions:
  id-token: write
  contents: read

jobs:
  terraform-apply:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.0"

      - name: Identify the environment
        run: |
            # Default
            ENVIRONMENT="dev"

            if [[ "${GITHUB_HEAD_REF}" == "release" || "${GITHUB_REF}" == "refs/heads/release" ]]; then
              ENVIRONMENT="prod"
            fi
            echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          if [[ ${{ github.head_ref }} == "ci/add-terraform-workflows" ]]; then
            terraform init -backend-config=../infrastructure/backends/backend-$ENVIRONMENT.hcl
          elif [[ ${{ github.ref }} == "refs/heads/release" ]]; then
            terraform init -backend-config=../infrastructure/backends/backend-$ENVIRONMENT.hcl
          fi
        working-directory: terraform

      - name: Download plan metadata
        run: |
          aws s3 cp s3://hello-birthday-api-tfstate/tfplans/$ENVIRONMENT/plan-filename.txt plan-filename.txt

      - name: Download the Terraform plan
        run: |
          PLAN_FILE=$(cat plan-filename.txt)
          echo "PLAN_FILE=$PLAN_FILE" >> $GITHUB_ENV
          aws s3 cp s3://hello-birthday-api-tfstate/tfplans/$ENVIRONMENT/$PLAN_FILE.tfplan tfplan

      - name: Verify tfplan exists
        run: |
          if [ ! -f tfplan ]; then
            echo "::error ::Terraform plan file (tfplan) missing. Aborting apply."
            exit 1
          else
            echo "Terraform plan file (tfplan) found. Proceeding."
          fi

      - name: Announce Plan Being Applied
        run: |
          echo "Terraform plan (artifact: $PLAN_FILE.tfplan) has been downloaded locally as tfplan."
          echo "Proceeding to apply it now..."

      - name: Terraform Apply
        run: |
            ls -l
            terraform apply -auto-approve tfplan
            echo "::notice :: Terraform apply completed successfully for plan $PLAN_FILE.tfplan"
        working-directory: terraform
